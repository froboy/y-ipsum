{"version":3,"sources":["data.js","Context.js","components/Controls.js","components/IpsumDisplay.js","App.js","serviceWorker.js","index.js"],"names":["data","Context","React","createContext","ContextProvider","children","useState","ipsum","setIpsum","count","setCount","createIpsum","newIpsum","k","numSentences","Math","floor","random","ipsumParagraph","i","numWords","ipsumString","j","randomIndex","length","ipsumRemoveSpace","substr","IpsumSentence","charAt","toUpperCase","slice","finalIpsumParagraph","push","useEffect","Provider","value","Controls","useContext","className","onChange","e","target","onClick","IpsumDisplay","ipsumBlock","map","text","key","id","App","main","initial","opacity","animate","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oPA8NeA,EA9NF,CACT,UACA,SACA,aACA,UACA,YACA,aACA,eACA,cACA,SACA,WACA,SACA,UACA,SACA,SACA,mBACA,OACA,QACA,WACA,OACA,UACA,UACA,QACA,OACA,SACA,SACA,QACA,WACA,UACA,UACA,UACA,UACA,aACA,cACA,YACA,cACA,aACA,UACA,UACA,UACA,MACA,QACA,MACA,YACA,WACA,cACA,WACA,8BACA,WACA,UACA,UACA,YACA,SACA,SACA,MACA,YACA,cACA,QACA,WACA,UACA,WACA,SACA,OACA,UACA,QACA,OACA,UACA,UACA,MACA,QACA,MACA,MACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,YACA,UACA,uBACA,iBACA,OACA,UACA,OACA,SACA,YACA,eACA,aACA,YACA,WACA,OACA,OACA,MACA,OACA,SACA,UACA,aACA,QACA,WACA,UACA,OACA,OACA,QACA,SACA,OACA,OACA,OACA,cACA,SACA,OACA,QACA,aACA,OACA,eACA,UACA,MACA,OACA,OACA,WACA,wBACA,SACA,OACA,QACA,MACA,OACA,QACA,OACA,QACA,gBACA,cACA,SACA,QACA,SACA,WACA,UACA,iBACA,OACA,gBACA,WACA,cACA,SACA,QACA,OACA,YACA,WACA,YACA,UACA,qBACA,aACA,UACA,WACA,QACA,OACA,aACA,YACA,WACA,qBACA,QACA,WACA,MACA,OACA,SACA,SACA,UACA,MACA,QACA,UACA,UACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,WACA,OACA,aACA,QACA,QACA,UACA,OACA,OACA,WACA,QACA,SACA,YACA,aACA,QACA,QACA,eACA,UACA,WACA,YACA,YACA,OACA,UACA,QACA,OACA,OACA,SACA,QACA,oBACA,eACA,MACA,SCzNEC,EAAUC,IAAMC,cAAc,MAE9BC,EAAkB,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAEvB,EAA4BC,mBAAS,IAAG,mBAAhCC,EAAK,KAAEC,EAAQ,KACvB,EAA4BF,mBAAS,GAAE,mBAA/BG,EAAK,KAAEC,EAAQ,KAEvB,SAASC,IAEL,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAG5B,IAFA,IAAMC,EAAeC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EACjDC,EAAiB,GACZC,EAAI,EAAGA,EAAIL,EAAcK,IAAK,CAGnC,IAFA,IAAMC,EAAWL,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAC7CI,EAAc,GACTC,EAAI,EAAGA,EAAIF,EAAUE,IAAK,CAC/B,IAAMC,EAAcR,KAAKC,MAAMD,KAAKE,SAAWjB,EAAKwB,QACpDH,EAAW,UAAMA,EAAW,YAAIrB,EAAKuB,IAEzC,IAAME,EAAmBJ,EAAYK,OAAO,GACtCC,EAAgBF,EAAiBG,OAAO,GAAGC,cAAgBJ,EAAiBK,MAAM,GAAE,IAC1FZ,EAAc,UAAMA,EAAc,YAAIS,GAE1C,IAAMI,EAAsBb,EAAeQ,OAAO,GAClDd,EAASoB,KAAKD,GAElBvB,EAASI,GAOb,OAJAqB,qBAAU,kBACNtB,MACD,IAGC,kBAACV,EAAQiC,SAAQ,CAACC,MAAO,CAAC5B,QAAOC,WAAUC,QAAOC,WAAUC,gBACvDN,ICXE+B,EAvBE,WAEb,MAAyCC,qBAAWpC,GAA5CQ,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAEzB,OACI,yBAAK2B,UAAU,eACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,sBACX,mDACA,4BAAQC,SAAU,SAACC,GAAC,OAAK9B,EAAS8B,EAAEC,OAAON,QAAQA,MAAO1B,GACtD,4BAAQ0B,MAAM,KAAG,KACjB,4BAAQA,MAAM,KAAG,KACjB,4BAAQA,MAAM,KAAG,KACjB,4BAAQA,MAAM,KAAG,KACjB,4BAAQA,MAAM,KAAG,QAI7B,4BAAQO,QAAS/B,GAAY,oBCN1BgC,EAZM,WAEjB,IACMC,EADYP,qBAAWpC,GAArBM,MACiBsC,KAAI,SAACC,GAAI,OAAK,uBAAGC,IAAKD,GAAOA,MAEtD,OACI,yBAAKE,GAAG,mBACHJ,I,OCsBEK,EAzBH,WAEV,IAAQ1C,EAAU8B,qBAAWpC,GAArBM,MAER,OACE,yBAAK+B,UAAU,OACb,gCACE,uCAGF,wBAAIA,UAAU,WAAS,gDAEvB,kBAAC,EAAQ,MACP,kBAAC,IAAOY,KAAI,CACVF,GAAG,iBACHG,QAAS,CAACC,QAAS,GACnBC,QAAS,CAACD,QAAS,GACnBL,IAAKxC,GAEP,kBAAC,EAAY,SCdD+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,EAAe,KACZ,kBAAC,EAAG,OAERC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.76a6094e.chunk.js","sourcesContent":["const data = [\n    \"achieve\",\n    \"across\",\n    \"activities\",\n    \"address\",\n    \"adventure\",\n    \"adventures\",\n    \"advocate for\",\n    \"afterschool\",\n    \"always\",\n    \"approach\",\n    \"around\",\n    \"believe\",\n    \"belong\",\n    \"better\",\n    \"better every day\",\n    \"bond\",\n    \"build\",\n    \"building\",\n    \"camp\",\n    \"campers\",\n    \"camping\",\n    \"camps\",\n    \"care\",\n    \"career\",\n    \"change\",\n    \"child\",\n    \"children\",\n    \"chronic\",\n    \"classes\",\n    \"coaches\",\n    \"college\",\n    \"commitment\",\n    \"communities\",\n    \"community\",\n    \"competitive\",\n    \"confidence\",\n    \"contact\",\n    \"cooking\",\n    \"country\",\n    \"dad\",\n    \"dance\",\n    \"day\",\n    \"day camps\",\n    \"designed\",\n    \"development\",\n    \"diabetes\",\n    \"Diabetes Prevention Program\",\n    \"disaster\",\n    \"disease\",\n    \"diverse\",\n    \"diversity\",\n    \"donate\",\n    \"donors\",\n    \"eat\",\n    \"education\",\n    \"engineering\",\n    \"every\",\n    \"everyone\",\n    \"explore\",\n    \"families\",\n    \"family\",\n    \"find\",\n    \"fitness\",\n    \"focus\",\n    \"food\",\n    \"for all\",\n    \"friends\",\n    \"fun\",\n    \"games\",\n    \"gap\",\n    \"get\",\n    \"getting\",\n    \"give\",\n    \"giving\",\n    \"global\",\n    \"grades\",\n    \"greater\",\n    \"groups\",\n    \"guides\",\n    \"habits\",\n    \"health\",\n    \"healthier\",\n    \"healthy\",\n    \"Healthy Kids DayÂ®\",\n    \"healthy living\",\n    \"help\",\n    \"helping\",\n    \"home\",\n    \"hunger\",\n    \"inclusion\",\n    \"instructions\",\n    \"integrated\",\n    \"interests\",\n    \"involved\",\n    \"join\",\n    \"keep\",\n    \"kid\",\n    \"kids\",\n    \"leader\",\n    \"leaders\",\n    \"leadership\",\n    \"learn\",\n    \"learning\",\n    \"lessons\",\n    \"life\",\n    \"live\",\n    \"lives\",\n    \"living\",\n    \"love\",\n    \"make\",\n    \"math\",\n    \"mathematics\",\n    \"matter\",\n    \"meal\",\n    \"meals\",\n    \"membership\",\n    \"menu\",\n    \"metropolitan\",\n    \"million\",\n    \"mom\",\n    \"move\",\n    \"name\",\n    \"national\",\n    \"nationwide membership\",\n    \"nature\",\n    \"need\",\n    \"needs\",\n    \"new\",\n    \"news\",\n    \"offer\",\n    \"open\",\n    \"opens\",\n    \"opportunities\",\n    \"opportunity\",\n    \"others\",\n    \"our Y\",\n    \"outlet\",\n    \"outreach\",\n    \"outside\",\n    \"overnight camp\",\n    \"park\",\n    \"participating\",\n    \"partners\",\n    \"partnership\",\n    \"people\",\n    \"place\",\n    \"play\",\n    \"positions\",\n    \"positive\",\n    \"potential\",\n    \"prevent\",\n    \"disease prevention\",\n    \"principles\",\n    \"program\",\n    \"programs\",\n    \"reach\",\n    \"read\",\n    \"recreation\",\n    \"resources\",\n    \"response\",\n    \"our responsibility\",\n    \"right\",\n    \"our role\",\n    \"run\",\n    \"safe\",\n    \"safety\",\n    \"school\",\n    \"science\",\n    \"see\",\n    \"serve\",\n    \"service\",\n    \"serving\",\n    \"share\",\n    \"simoes\",\n    \"skills\",\n    \"small\",\n    \"social\",\n    \"spirits\",\n    \"sports\",\n    \"staff\",\n    \"STEM\",\n    \"STEAM\",\n    \"steps\",\n    \"story\",\n    \"students\",\n    \"summer\",\n    \"support\",\n    \"swim\",\n    \"swimming\",\n    \"team\",\n    \"technology\",\n    \"teens\",\n    \"the Y\",\n    \"through\",\n    \"time\",\n    \"tips\",\n    \"together\",\n    \"tools\",\n    \"toward\",\n    \"volunteer\",\n    \"volunteers\",\n    \"watch\",\n    \"water\",\n    \"water safety\",\n    \"website\",\n    \"weeklong\",\n    \"welcoming\",\n    \"wellbeing\",\n    \"work\",\n    \"working\",\n    \"world\",\n    \"year\",\n    \"YMCA\",\n    \"YMCA's\",\n    \"youth\",\n    \"youth development\",\n    \"youth sports\",\n    \"Y's\",\n    \"Y-USA\",\n]\n\nexport default data","import React, { useState, useEffect } from 'react'\nimport data from './data'\nconst Context = React.createContext(null)\n\nconst ContextProvider = ({ children }) => {\n\n    const [ ipsum, setIpsum ] = useState([])\n    const [ count, setCount ] = useState(1)\n\n    function createIpsum() {\n        const newIpsum = []\n        for (let k = 0; k < count; k++) {\n            const numSentences = Math.floor(Math.random() * 2) + 3\n            let ipsumParagraph = \"\"\n            for (let i = 0; i < numSentences; i++) {\n                const numWords = Math.floor(Math.random() * 7) + 10\n                let ipsumString = \"\"\n                for (let j = 0; j < numWords; j++) {\n                    const randomIndex = Math.floor(Math.random() * data.length)\n                    ipsumString = `${ipsumString} ${data[randomIndex]}`\n                }\n                const ipsumRemoveSpace = ipsumString.substr(1)\n                const IpsumSentence = ipsumRemoveSpace.charAt(0).toUpperCase() + ipsumRemoveSpace.slice(1) + `.`\n                ipsumParagraph = `${ipsumParagraph} ${IpsumSentence}`\n            }\n            const finalIpsumParagraph = ipsumParagraph.substr(1)\n            newIpsum.push(finalIpsumParagraph)\n        }\n        setIpsum(newIpsum)\n    }\n\n    useEffect(() => (\n        createIpsum()\n    ), [])\n    \n    return (\n        <Context.Provider value={{ipsum, setIpsum, count, setCount, createIpsum}}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}","import React, { useContext } from 'react'\nimport { Context } from '../Context'\n\nconst Controls = () => {\n    \n    const { count, setCount, createIpsum } = useContext(Context)\n    \n    return (\n        <div className=\"control-bar\">\n            <div className=\"controls-container\">\n                <div className=\"paragraph-selector\">\n                    <p>Number of paragraphs</p>\n                    <select onChange={(e) => setCount(e.target.value)} value={count}>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                </div>\n            </div>\n            <button onClick={createIpsum}>Generate Ipsum</button>\n        </div>\n    )\n}\n\nexport default Controls\n","import React, { useContext } from 'react'\nimport { Context } from '../Context'\n\nconst IpsumDisplay = () => {\n\n    const { ipsum } = useContext(Context)\n    const ipsumBlock = ipsum.map((text) => <p key={text}>{text}</p>)\n\n    return (\n        <div id=\"ipsum-container\">\n            {ipsumBlock}\n        </div>\n    )\n}\n\nexport default IpsumDisplay","import React, { useContext } from 'react'\nimport './App.css'\nimport Controls from './components/Controls'\nimport IpsumDisplay from './components/IpsumDisplay'\nimport { Context } from './Context'\nimport { motion } from 'framer-motion'\n\nconst App = () => {\n\n  const { ipsum } = useContext(Context)\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>\n          Y Ipsum\n        </h1>\n      <h3 className=\"subhead\">An ipsum generator using common YMCA lingo.</h3>\n      </header>\n      <Controls />\n        <motion.main\n          id=\"ipsumContainer\"\n          initial={{opacity: 0}}\n          animate={{opacity: 1}}\n          key={ipsum}\n        >\n        <IpsumDisplay />\n      </motion.main>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ContextProvider } from './Context'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ContextProvider>\n        <App />\n    </ContextProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}